{
    "$schema": "https://json-schema.org/schema#",
    "$id": "http://odow.github.io/SDDP.jl/sof.schema.json",
    "title": "The schema for a policy graph representation of a multistage stochastic program",
    "type": "object",
    "required": ["version", "root", "nodes", "edges"],
    "properties": {
        "version": {
            "description": "The version of StochOptFormat that this schema validates against.",
            "type": "object",
            "required": ["minor", "major"],
            "properties": {
                "minor": {
                    "const": 1
                },
                "major": {
                    "const": 0
                }
            }
        },
        "name": {
            "description": "The name of the model.",
            "type": "string"
        },
        "author": {
            "description": "The author of the model for citation purposes.",
            "type": "string"
        },
        "description": {
            "description": "A human-readable description of the model.",
            "type": "string"
        },
        "root": {
            "description": "An object for the root node.",
            "type": "object",
            "required": ["name", "state_variables"],
            "properties": {
                "name": {
                    "description": "The name of the root node, to be used in `edges`.",
                    "type": "string"
                },
                "state_variables": {
                    "description": "A vector of state variables.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "required": ["initial_value"],
                        "properties": {
                            "initial_value": {
                                "description": "The value of the state variable at the root node.",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "nodes": {
            "description": "An object containing the nodes in the policy graph.",
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/node"
            }
        },
        "edges": {
            "description": "An array of edges in the policy graph.",
            "type": "array",
            "items": {
                "$ref": "#/definitions/edge"
            }
        }
    },
    "test_data": {
        "type": "array",
        "items": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "node": {
                        "type": "string"
                    },
                    "support": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "edge": {
            "description": "An edge in the policy graph, describing a transition from node `from` to node `to` with probability `probability`.",
            "type": "object",
            "required": ["from", "to", "probability"],
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "probability": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        },
        "node": {
            "description": "An node in the policy graph.",
            "type": "object",
            "required": ["state_variables", "random_variables", "subproblem"],
            "properties": {
                "state_variables": {
                    "description": "An object that maps the name of the state variable to the incoming and outgoing state variables in the MathOptFormat file.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "required": ["in", "out"],
                        "properties": {
                            "in": {
                                "type": "string"
                            },
                            "out": {
                                "type": "string"
                            }
                        }
                    }
                },
                "random_variables": {
                    "description": "An array of objects that map the name of a random variable to the variable in the MathOptFormat file.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "subproblem": {
                    "description": "The basic subproblem in MathOptFormat.",
                    "$ref": "mof.schema.json"
                },
                "noise_terms": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": ["probability", "support"],
                        "properties": {
                            "probability": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1
                            },
                            "support": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": ["random_variable", "value"],
                                    "properties": {
                                        "parameter": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
